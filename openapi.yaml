openapi: 3.0.3
info:
  title: JPMC User service APIs Definition
  description: | 
    # An Open API Specification, to expose ***<u>`APIs offered by user service`</u>***
    # Supported Operations
    ```
    - Create User
    - Update User
    - Delete User
    - Get Single User
    - Get Multiple users 
    
    ```
    
  termsOfService: http://localhost:8080/terms
  contact: 
    name: User Service API Support
    url: https://localhost:8080/api/users
    email: kempegowda.nagaraj@cognizant.com 
  license: 
    name: User Service License
    url: https://localhost:8080/license
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: local server
  - url: http://dev.jpmc-user-management.com/v1
    description: development server
  - url: http://staging.jpmc-user-management.com/v1
    description: staging server
  - url: http://api.jpmc-user-management.com/v1
    description: production server
tags:
  - name: Users
    description: |
      `Users-related Operations` 
paths: 
  /api/users:
    get:
      tags:
        - Users
      summary: Get all users
      description: returns all users
      responses:
        '200':
          description: returns list of all users
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    id: 
                      type: integer
                    name:
                      type: string
        '500':
          $ref: "#/components/responses/InternalServerError"
          
    post: 
      tags:
        - Users
      summary: Create user
      description: Create user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
                
      responses:
        '201':
          description: Returns user details of created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: integer
                  name:
                    type: string
        '500':
          $ref: "#/components/responses/InternalServerError"
    put: 
      tags:
        - Users
      summary: Update user
      description: Update user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                dateOfBirth: 
                  type: string
                  format: date 
                city:
                  type: string
                state:
                  type: string
                country: 
                  type: string
                
      responses:
        '200':
          description: User updated successfully
    delete: 
      tags:
        - Users
      summary: Delete user
      description: Delete user
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '204':
          description: User deleted successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
  /api/users/{id}:
    get: 
      tags:
        - Users
      summary: Get user details for given id
      description: returns user details for given id
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
      responses:
        '200':
          description: returns user details for given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: integer
                    format: int64
                  name:
                    type: string
        '500':
          $ref: "#/components/responses/InternalServerError"
components:
  parameters:
    orderIdQueryParam:
          name: id
          in: query  
          schema:
            type: integer
            format: int64
          required: true
          example: 101
    orderIdPathParam:
          name: id
          in: path  
          schema:
            type: integer
          required: true
          example: 101
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          
        dateOfBirth: 
          type: string
          format: date
        city:
          type: string
        state:
          type: string
        country: 
          type: string
      required: [name, dateOfBirth, city, state, country]
  responses:
    InternalServerError:
      description: |
        Unable To process Request. Please contact admin.support@jpmc.com
 